{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minem\\\\OneDrive\\\\Documents\\\\GitHub\\\\Taft-Overflow\\\\client\\\\src\\\\containers\\\\posts_container\\\\Posts_container.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './posts_container.css';\nimport { Post } from '../../components/index';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsPerPage = 10;\nconst Posts_container = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/api/posts\").then(res => {\n      const regularPosts = res.data.filter(post => post.type === 'regular').sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n      setPosts(regularPosts);\n      setTotalPages(Math.ceil(regularPosts.length / PostsPerPage));\n    }).catch(err => console.log(err));\n  }, []);\n  const indexOfLastPost = currentPage * PostsPerPage;\n  const indexOfFirstPost = indexOfLastPost - PostsPerPage;\n  console.log(indexOfFirstPost + ' ' + indexOfLastPost);\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const Posts = currentPosts.map((content, index) => /*#__PURE__*/_jsxDEV(Post, {\n    contents: content\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts__container section__padding\",\n    children: [Posts, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts__pagination\",\n      children: [currentPage > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(currentPage - 1),\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), Array.from({\n        length: totalPages\n      }, (_, i) => i + 1).map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(number),\n        className: currentPage === number ? 'active' : '',\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)), currentPage < totalPages && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(currentPage + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts_container, \"5qpRP1LE2O0MHwrpun9SghRtses=\");\n_c = Posts_container;\nexport default Posts_container;\nvar _c;\n$RefreshReg$(_c, \"Posts_container\");","map":{"version":3,"names":["React","useEffect","useState","Post","axios","jsxDEV","_jsxDEV","PostsPerPage","Posts_container","_s","posts","setPosts","currentPage","setCurrentPage","totalPages","setTotalPages","get","then","res","regularPosts","data","filter","post","type","sort","a","b","Date","createdAt","Math","ceil","length","catch","err","console","log","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","Posts","map","content","index","contents","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","Array","from","_","i","number","_c","$RefreshReg$"],"sources":["C:/Users/minem/OneDrive/Documents/GitHub/Taft-Overflow/client/src/containers/posts_container/Posts_container.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './posts_container.css';\r\nimport { Post } from '../../components/index';\r\nimport axios from 'axios';\r\n\r\nconst PostsPerPage = 10; \r\n\r\nconst Posts_container = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:4000/api/posts\")\r\n      .then(res => {\r\n        const regularPosts = res.data.filter(post => post.type === 'regular').sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n        setPosts(regularPosts);\r\n        setTotalPages(Math.ceil(regularPosts.length / PostsPerPage));\r\n      }).catch(err => console.log(err));\r\n  }, []);\r\n\r\n  \r\n  const indexOfLastPost = currentPage * PostsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - PostsPerPage;\r\n  console.log(indexOfFirstPost + ' ' + indexOfLastPost);\r\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  const Posts = currentPosts.map((content, index) =>\r\n    <Post key={index} contents={content}></Post>\r\n  );\r\n\r\n  return (\r\n    <div className='posts__container section__padding'>\r\n      {Posts}\r\n      <div className=\"posts__pagination\">\r\n        {currentPage > 1 && (\r\n          <button onClick={() => paginate(currentPage - 1)}>Prev</button>\r\n        )}\r\n        {Array.from({ length: totalPages }, (_, i) => i + 1).map(number => (\r\n          <button key={number} onClick={() => paginate(number)} className={currentPage === number ? 'active' : ''}>\r\n            {number}\r\n          </button>\r\n        ))}\r\n        {currentPage < totalPages && (\r\n          <button onClick={() => paginate(currentPage + 1)}>Next</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts_container;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}