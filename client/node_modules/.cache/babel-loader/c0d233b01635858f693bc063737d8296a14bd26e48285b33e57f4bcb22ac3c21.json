{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minem\\\\OneDrive\\\\Documents\\\\GitHub\\\\Taft-Overflow\\\\client\\\\src\\\\containers\\\\course_container\\\\Course_container.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './course_container.css';\n//import {Post} from '../../components/index';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Post } from '../../components/index';\nimport course_cover from '../../assets/images/csarch1cover.jpg';\nimport course_picture from '../../assets/images/csarch1logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Course_container = ({\n  user\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [isJoined, setIsJoined] = useState(false);\n  const [courseId, setCourseId] = useState([]);\n  //get all courses joined by the user\n  console.log(user);\n  useEffect(() => {\n    axios.get(`http://localhost:4000/api/courses/user/${user.username}`).then(res => {\n      // Assuming the response contains an array of course objects\n      const joinedCourses = res.data;\n      const course = joinedCourses.find(course => course.course_id === id);\n      if (course) {\n        setIsJoined(true);\n        setCourseId(course._id); // Assuming course has a course_id field\n      } else {\n        setIsJoined(false);\n      }\n    }).catch(err => console.log(err));\n  }, [id, user.username]);\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/api/posts\").then(res => {\n      const filteredPosts = res.data.filter(post => post.type === 'regular' && post.course_id.name === String(id));\n      setPosts(filteredPosts);\n    }).catch(err => console.log(err));\n  }, [id]);\n  const join = () => {\n    const formData = {\n      course_id: courseId,\n      user_id: user._id\n    };\n    //console.log(formData);\n    axios.post(`http://localhost:4000/api/join_course`, formData).then(res => {\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  };\n  const Posts = posts.slice(0, 10).map((content, index) => /*#__PURE__*/_jsxDEV(Post, {\n    user: user,\n    contents: content\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"course__container section__padding\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course_header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course_header__cover-photo\",\n        style: {\n          backgroundImage: `url(${course_cover})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course_header__profile-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course_header__course-picture\",\n          style: {\n            backgroundImage: `url(${course_picture})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course_header__profilecontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"course_header__course-name\",\n            children: [\"c/\", id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"course_header__right-button\",\n            onClick: user && join,\n            children: isJoined ? 'Joined' : 'Join'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topic__contents\",\n      children: Posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n};\n_s(Course_container, \"1e62xR/UqqXJTrUb5HTE7fDATDE=\", false, function () {\n  return [useParams];\n});\n_c = Course_container;\nexport default Course_container;\nvar _c;\n$RefreshReg$(_c, \"Course_container\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","Post","course_cover","course_picture","jsxDEV","_jsxDEV","Course_container","user","_s","id","posts","setPosts","isJoined","setIsJoined","courseId","setCourseId","console","log","get","username","then","res","joinedCourses","data","course","find","course_id","_id","catch","err","filteredPosts","filter","post","type","name","String","join","formData","user_id","Posts","slice","map","content","index","contents","fileName","_jsxFileName","lineNumber","columnNumber","className","children","style","backgroundImage","onClick","_c","$RefreshReg$"],"sources":["C:/Users/minem/OneDrive/Documents/GitHub/Taft-Overflow/client/src/containers/course_container/Course_container.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './course_container.css';\r\n//import {Post} from '../../components/index';\r\nimport axios from 'axios';\r\nimport {useParams} from 'react-router-dom'\r\nimport {Post} from '../../components/index';\r\nimport course_cover from '../../assets/images/csarch1cover.jpg';\r\nimport course_picture from '../../assets/images/csarch1logo.png';\r\n\r\n\r\nconst Course_container = ({user}) => {\r\n  const {id} = useParams();\r\n  const [posts,setPosts] = useState([])\r\n  const [isJoined, setIsJoined] = useState(false);\r\n  const [courseId, setCourseId] = useState([])\r\n  //get all courses joined by the user\r\n  console.log(user);\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:4000/api/courses/user/${user.username}`)\r\n      .then(res => {\r\n        // Assuming the response contains an array of course objects\r\n        const joinedCourses = res.data;\r\n        const course = joinedCourses.find(course => course.course_id === id);\r\n  \r\n        if (course) {\r\n          setIsJoined(true);\r\n          setCourseId(course._id);  // Assuming course has a course_id field\r\n        } else {\r\n          setIsJoined(false);\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, [id, user.username]);\r\n  \r\n  useEffect( () => {\r\n    axios.get(\"http://localhost:4000/api/posts\")\r\n      .then(res => {\r\n        const filteredPosts = res.data.filter(post => \r\n          post.type === 'regular' && post.course_id.name === String(id)\r\n        );\r\n        setPosts(filteredPosts);\r\n      }).catch(err=> console.log(err));\r\n  },[id]);\r\n\r\n  const join = () => {\r\n    const formData = {\r\n      course_id: courseId,\r\n      user_id: user._id,\r\n    };\r\n    //console.log(formData);\r\n    axios.post(`http://localhost:4000/api/join_course`, formData)\r\n      .then(res => {\r\n        console.log(res.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n\r\n  const Posts = posts.slice(0,10).map((content, index) => \r\n    <Post key={index} user={user} contents={content}></Post>\r\n  );\r\n\r\n  return (\r\n    \r\n      <div className='course__container section__padding'>\r\n      <div className='course_header'>\r\n        <div className=\"course_header__cover-photo\" style={{ backgroundImage: `url(${course_cover})` }}></div>\r\n        <div className=\"course_header__profile-container\">\r\n        <div className=\"course_header__course-picture\" style={{ backgroundImage: `url(${course_picture})` }}></div>\r\n          <div className=\"course_header__profilecontainer\">\r\n            <div className=\"course_header__course-name\">c/{id}</div>\r\n            <button className=\"course_header__right-button\" onClick={user && join}>\r\n              {isJoined ? 'Joined' : 'Join'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='topic__contents'>\r\n        {Posts}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Course_container"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}