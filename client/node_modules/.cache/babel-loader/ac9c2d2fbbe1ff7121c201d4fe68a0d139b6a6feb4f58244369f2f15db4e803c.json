{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dakuy\\\\Desktop\\\\previousbackup\\\\init\\\\Taft-Overflow\\\\client\\\\src\\\\containers\\\\body\\\\Body.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport './body.css';\nimport { handleDragOver, handleDrop, handleFileChange } from './formHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  // State hooks for user inputs and file upload feedback\n  const [username, setUsername] = useState('');\n  // Add other states for your form inputs...\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadMessage, setUploadMessage] = useState('Upload Profile Pic');\n\n  // Function to handle file change, using currying to pass in additional states\n  const onFileChange = useCallback(handleFileChange(setSelectedFile, setUploadMessage), []);\n\n  // Wrap external handleDrop function, passing our custom onFileChange function\n  const onDrop = useCallback(handleDrop(onFileChange), [onFileChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box profile-pic\",\n          onDragOver: handleDragOver,\n          onDrop: onDrop,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"profilePicInput\",\n            className: selectedFile ? 'upload-area uploaded' : 'upload-area',\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: uploadMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"profilePicInput\",\n              accept: \".png, .jpg, .jpeg\",\n              hidden: true,\n              onChange: e => onFileChange(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"RhmSn7xAn95X7raYXV22F0R6dnk=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useCallback","handleDragOver","handleDrop","handleFileChange","jsxDEV","_jsxDEV","Body","_s","username","setUsername","selectedFile","setSelectedFile","uploadMessage","setUploadMessage","onFileChange","onDrop","className","children","onDragOver","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","accept","hidden","onChange","e","target","files","_c","$RefreshReg$"],"sources":["C:/Users/Dakuy/Desktop/previousbackup/init/Taft-Overflow/client/src/containers/body/Body.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport './body.css';\r\nimport { handleDragOver, handleDrop, handleFileChange } from './formHelpers';\r\n\r\nconst Body = () => {\r\n  // State hooks for user inputs and file upload feedback\r\n  const [username, setUsername] = useState('');\r\n  // Add other states for your form inputs...\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadMessage, setUploadMessage] = useState('Upload Profile Pic');\r\n\r\n  // Function to handle file change, using currying to pass in additional states\r\n  const onFileChange = useCallback(handleFileChange(setSelectedFile, setUploadMessage), []);\r\n\r\n  // Wrap external handleDrop function, passing our custom onFileChange function\r\n  const onDrop = useCallback(handleDrop(onFileChange), [onFileChange]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"content\">\r\n        <form /* onSubmit={yourSubmitHandlerHere} */>\r\n          {/* Your form inputs here */}\r\n          <div className=\"input-box profile-pic\"\r\n               onDragOver={handleDragOver}\r\n               onDrop={onDrop}>\r\n            <label htmlFor=\"profilePicInput\" className={selectedFile ? 'upload-area uploaded' : 'upload-area'}>\r\n              <p>{uploadMessage}</p>\r\n              <input type=\"file\" id=\"profilePicInput\" accept=\".png, .jpg, .jpeg\" hidden onChange={(e) => onFileChange(e.target.files[0])} />\r\n            </label>\r\n          </div>\r\n          {/* Other form elements */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAO,YAAY;AACnB,SAASC,cAAc,EAAEC,UAAU,EAAEC,gBAAgB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C;EACA,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,oBAAoB,CAAC;;EAExE;EACA,MAAMe,YAAY,GAAGd,WAAW,CAACG,gBAAgB,CAACQ,eAAe,EAAEE,gBAAgB,CAAC,EAAE,EAAE,CAAC;;EAEzF;EACA,MAAME,MAAM,GAAGf,WAAW,CAACE,UAAU,CAACY,YAAY,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAEpE,oBACET,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBZ,OAAA;MAAKW,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBZ,OAAA;QAAAY,QAAA,eAEEZ,OAAA;UAAKW,SAAS,EAAC,uBAAuB;UACjCE,UAAU,EAAEjB,cAAe;UAC3Bc,MAAM,EAAEA,MAAO;UAAAE,QAAA,eAClBZ,OAAA;YAAOc,OAAO,EAAC,iBAAiB;YAACH,SAAS,EAAEN,YAAY,GAAG,sBAAsB,GAAG,aAAc;YAAAO,QAAA,gBAChGZ,OAAA;cAAAY,QAAA,EAAIL;YAAa;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtBlB,OAAA;cAAOmB,IAAI,EAAC,MAAM;cAACC,EAAE,EAAC,iBAAiB;cAACC,MAAM,EAAC,mBAAmB;cAACC,MAAM;cAACC,QAAQ,EAAGC,CAAC,IAAKf,YAAY,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;YAAE;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CA/BID,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAiCV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}