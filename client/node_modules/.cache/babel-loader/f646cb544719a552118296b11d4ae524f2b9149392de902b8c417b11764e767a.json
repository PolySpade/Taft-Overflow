{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dakuy\\\\Desktop\\\\AppDev\\\\Taft-Overflow\\\\client\\\\src\\\\containers\\\\body\\\\scripted.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Recursive comment component to handle infinite nesting\n// Recursive comment component to handle infinite nesting\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  comment,\n  onReply\n}) => {\n  _s();\n  var _comment$replies;\n  const [showReply, setShowReply] = useState(false);\n  const [replyText, setReplyText] = useState('');\n  const handleReply = () => {\n    if (replyText.trim()) {\n      onReply(replyText, comment.id);\n      setReplyText('');\n      setShowReply(false);\n    } else {\n      alert('Please enter a reply.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [comment.author, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), \" \", comment.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowReply(!showReply),\n      children: \"Reply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), showReply && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-reply\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: replyText,\n        onChange: e => setReplyText(e.target.value),\n        placeholder: \"Write a reply...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReply,\n        children: \"Submit Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), ((_comment$replies = comment.replies) === null || _comment$replies === void 0 ? void 0 : _comment$replies.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nested-replies\",\n      children: comment.replies.map(reply => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: reply,\n        onReply: onReply\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n\n// Helper function to recursively add a reply to the appropriate comment\n_s(Comment, \"lixX1qJvkneWn1DLExZL68Q07u4=\");\n_c = Comment;\nconst addReply = (comments, parentId, newComment) => {\n  return comments.map(comment => {\n    if (comment.id === parentId) {\n      return {\n        ...comment,\n        replies: [...comment.replies, newComment]\n      };\n    } else if (comment.replies) {\n      return {\n        ...comment,\n        replies: addReply(comment.replies, parentId, newComment)\n      };\n    } else {\n      return comment;\n    }\n  });\n};\n\n// Main comment section component\nconst CommentsSection = () => {\n  _s2();\n  const [comments, setComments] = useState([]);\n  const [newCommentText, setNewCommentText] = useState('');\n  const postComment = (text, parentId = null) => {\n    if (!text.trim()) {\n      alert('Please enter a comment or reply.');\n      return;\n    }\n    const comment = {\n      id: Math.random().toString(36).substr(2, 9),\n      author: 'Anonymous',\n      text,\n      replies: []\n    };\n    if (parentId) {\n      setComments(prevComments => addReply(prevComments, parentId, comment));\n    } else {\n      setComments(prevComments => [...prevComments, comment]);\n    }\n    setNewCommentText('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"commentInput\",\n      value: newCommentText,\n      onChange: e => setNewCommentText(e.target.value),\n      placeholder: \"Write a comment...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"submit-button\",\n      onClick: () => postComment(newCommentText),\n      children: \"Post Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment,\n        onReply: postComment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s2(CommentsSection, \"xI0ZcJIll6A7wfp7J4ficufSB3E=\");\n_c2 = CommentsSection;\nexport default CommentsSection;\nvar _c, _c2;\n$RefreshReg$(_c, \"Comment\");\n$RefreshReg$(_c2, \"CommentsSection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Comment","comment","onReply","_s","_comment$replies","showReply","setShowReply","replyText","setReplyText","handleReply","trim","id","alert","className","children","author","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick","value","onChange","e","target","placeholder","replies","length","map","reply","_c","addReply","comments","parentId","newComment","CommentsSection","_s2","setComments","newCommentText","setNewCommentText","postComment","Math","random","toString","substr","prevComments","_c2","$RefreshReg$"],"sources":["C:/Users/Dakuy/Desktop/AppDev/Taft-Overflow/client/src/containers/body/scripted.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Recursive comment component to handle infinite nesting\r\n// Recursive comment component to handle infinite nesting\r\nconst Comment = ({ comment, onReply }) => {\r\n    const [showReply, setShowReply] = useState(false);\r\n    const [replyText, setReplyText] = useState('');\r\n  \r\n    const handleReply = () => {\r\n      if (replyText.trim()) {\r\n        onReply(replyText, comment.id);\r\n        setReplyText('');\r\n        setShowReply(false);\r\n      } else {\r\n        alert('Please enter a reply.');\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div className=\"comment\">\r\n        <div className=\"comment-content\">\r\n          <strong>{comment.author}:</strong> {comment.text}\r\n        </div>\r\n        <button onClick={() => setShowReply(!showReply)}>Reply</button>\r\n        {showReply && (\r\n          <div className=\"comment-reply\">\r\n            <textarea\r\n              value={replyText}\r\n              onChange={(e) => setReplyText(e.target.value)}\r\n              placeholder=\"Write a reply...\"\r\n            />\r\n            <button onClick={handleReply}>Submit Reply</button>\r\n          </div>\r\n        )}\r\n        {/* Nested replies will now be displayed below the reply box */}\r\n        {comment.replies?.length > 0 && (\r\n          <div className=\"nested-replies\">\r\n            {comment.replies.map(reply => (\r\n              <Comment key={reply.id} comment={reply} onReply={onReply} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\n// Helper function to recursively add a reply to the appropriate comment\r\nconst addReply = (comments, parentId, newComment) => {\r\n  return comments.map(comment => {\r\n    if (comment.id === parentId) {\r\n      return { ...comment, replies: [...comment.replies, newComment] };\r\n    } else if (comment.replies) {\r\n      return { ...comment, replies: addReply(comment.replies, parentId, newComment) };\r\n    } else {\r\n      return comment;\r\n    }\r\n  });\r\n};\r\n\r\n// Main comment section component\r\nconst CommentsSection = () => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newCommentText, setNewCommentText] = useState('');\r\n\r\n  const postComment = (text, parentId = null) => {\r\n    if (!text.trim()) {\r\n      alert('Please enter a comment or reply.');\r\n      return;\r\n    }\r\n    const comment = {\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      author: 'Anonymous',\r\n      text,\r\n      replies: [],\r\n    };\r\n\r\n    if (parentId) {\r\n      setComments(prevComments => addReply(prevComments, parentId, comment));\r\n    } else {\r\n      setComments(prevComments => [...prevComments, comment]);\r\n    }\r\n\r\n    setNewCommentText('');\r\n  };\r\n\r\nreturn (\r\n    <div className=\"comments-section\">\r\n        <textarea\r\n            className=\"commentInput\"\r\n            value={newCommentText}\r\n            onChange={(e) => setNewCommentText(e.target.value)}\r\n            placeholder=\"Write a comment...\"\r\n        />\r\n        <button id=\"submit-button\" onClick={() => postComment(newCommentText)}>Post Comment</button>\r\n        <div className=\"comments-list\">\r\n            {comments.map(comment => (\r\n                <Comment key={comment.id} comment={comment} onReply={postComment} />\r\n            ))}\r\n        </div>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default CommentsSection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}