{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './course_container.css';\n//import {Post} from '../../components/index';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Post } from '../../components/index';\nimport course_cover from '../../assets/images/csarch1cover.jpg';\nimport course_picture from '../../assets/images/csarch1logo.png';\nconst Course_container = ({\n  user\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [isJoined, setIsJoined] = useState(false);\n  const [courseId, setCourseId] = useState([]);\n  //get all courses joined by the user\n  console.log(user);\n  useEffect(() => {\n    axios.get(`http://localhost:4000/api/courses/user/${user.username}`).then(res => {\n      // Assuming the response contains an array of course objects\n      const joinedCourses = res.data;\n      const course = joinedCourses.find(course => course.course_id === id);\n      if (course) {\n        setIsJoined(true);\n        setCourseId(course._id); // Assuming course has a course_id field\n      } else {\n        setIsJoined(false);\n      }\n    }).catch(err => console.log(err));\n  }, [id, user.username]);\n\n  // useEffect( () => {\n  //   axios.get(\"http://localhost:4000/api/posts\")\n  //     .then(res => {\n  //       const filteredPosts = res.data.filter(post => \n  //         post.type === 'regular' && post.course_id.name === String(id)\n  //       );\n  //       setPosts(filteredPosts);\n  //     }).catch(err=> console.log(err));\n  // },[id]);\n\n  // const join = () => {\n  //   const formData = {\n  //     course_id: courseId,\n  //     user_id: user._id,\n  //   };\n  //   //console.log(formData);\n  //   axios.post(`http://localhost:4000/api/join_course`, formData)\n  //     .then(res => {\n  //       console.log(res.data);\n  //     })\n  //     .catch(err => console.log(err));\n  // };\n\n  // const Posts = posts.slice(0,10).map((content, index) => \n  //   <Post key={index} user={user} contents={content}></Post>\n  // );\n\n  // return (\n\n  //     <div className='course__container section__padding'>\n  //     <div className='course_header'>\n  //       <div className=\"course_header__cover-photo\" style={{ backgroundImage: `url(${course_cover})` }}></div>\n  //       <div className=\"course_header__profile-container\">\n  //       <div className=\"course_header__course-picture\" style={{ backgroundImage: `url(${course_picture})` }}></div>\n  //         <div className=\"course_header__profilecontainer\">\n  //           <div className=\"course_header__course-name\">c/{id}</div>\n  //           <button className=\"course_header__right-button\" >\n  //             {isJoined ? 'Joined' : 'Join'}\n  //           </button>\n  //         </div>\n  //       </div>\n  //     </div>\n  //     <div className='topic__contents'>\n  //       {Posts}\n  //     </div>\n  //   </div>\n  // )\n};\n_s(Course_container, \"UfkRidrolyTCEWHL/ACNwQSex14=\", false, function () {\n  return [useParams];\n});\n_c = Course_container;\nexport default Course_container;\nvar _c;\n$RefreshReg$(_c, \"Course_container\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","Post","course_cover","course_picture","Course_container","user","_s","id","posts","setPosts","isJoined","setIsJoined","courseId","setCourseId","console","log","get","username","then","res","joinedCourses","data","course","find","course_id","_id","catch","err","_c","$RefreshReg$"],"sources":["C:/Users/minem/OneDrive/Documents/GitHub/Taft-Overflow/client/src/containers/course_container/Course_container.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './course_container.css';\r\n//import {Post} from '../../components/index';\r\nimport axios from 'axios';\r\nimport {useParams} from 'react-router-dom'\r\nimport {Post} from '../../components/index';\r\nimport course_cover from '../../assets/images/csarch1cover.jpg';\r\nimport course_picture from '../../assets/images/csarch1logo.png';\r\n\r\n\r\nconst Course_container = ({user}) => {\r\n  const {id} = useParams();\r\n  const [posts,setPosts] = useState([])\r\n  const [isJoined, setIsJoined] = useState(false);\r\n  const [courseId, setCourseId] = useState([])\r\n  //get all courses joined by the user\r\n  console.log(user);\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:4000/api/courses/user/${user.username}`)\r\n      .then(res => {\r\n        // Assuming the response contains an array of course objects\r\n        const joinedCourses = res.data;\r\n        const course = joinedCourses.find(course => course.course_id === id);\r\n  \r\n        if (course) {\r\n          setIsJoined(true);\r\n          setCourseId(course._id);  // Assuming course has a course_id field\r\n        } else {\r\n          setIsJoined(false);\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, [id, user.username]);\r\n  \r\n  // useEffect( () => {\r\n  //   axios.get(\"http://localhost:4000/api/posts\")\r\n  //     .then(res => {\r\n  //       const filteredPosts = res.data.filter(post => \r\n  //         post.type === 'regular' && post.course_id.name === String(id)\r\n  //       );\r\n  //       setPosts(filteredPosts);\r\n  //     }).catch(err=> console.log(err));\r\n  // },[id]);\r\n\r\n  // const join = () => {\r\n  //   const formData = {\r\n  //     course_id: courseId,\r\n  //     user_id: user._id,\r\n  //   };\r\n  //   //console.log(formData);\r\n  //   axios.post(`http://localhost:4000/api/join_course`, formData)\r\n  //     .then(res => {\r\n  //       console.log(res.data);\r\n  //     })\r\n  //     .catch(err => console.log(err));\r\n  // };\r\n\r\n\r\n  // const Posts = posts.slice(0,10).map((content, index) => \r\n  //   <Post key={index} user={user} contents={content}></Post>\r\n  // );\r\n\r\n  // return (\r\n    \r\n  //     <div className='course__container section__padding'>\r\n  //     <div className='course_header'>\r\n  //       <div className=\"course_header__cover-photo\" style={{ backgroundImage: `url(${course_cover})` }}></div>\r\n  //       <div className=\"course_header__profile-container\">\r\n  //       <div className=\"course_header__course-picture\" style={{ backgroundImage: `url(${course_picture})` }}></div>\r\n  //         <div className=\"course_header__profilecontainer\">\r\n  //           <div className=\"course_header__course-name\">c/{id}</div>\r\n  //           <button className=\"course_header__right-button\" >\r\n  //             {isJoined ? 'Joined' : 'Join'}\r\n  //           </button>\r\n  //         </div>\r\n  //       </div>\r\n  //     </div>\r\n  //     <div className='topic__contents'>\r\n  //       {Posts}\r\n  //     </div>\r\n  //   </div>\r\n  // )\r\n}\r\n\r\nexport default Course_container"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,wBAAwB;AAC/B;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,SAAQC,IAAI,QAAO,wBAAwB;AAC3C,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,cAAc,MAAM,qCAAqC;AAGhE,MAAMC,gBAAgB,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM;IAACC;EAAE,CAAC,GAAGP,SAAS,CAAC,CAAC;EACxB,MAAM,CAACQ,KAAK,EAACC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C;EACAgB,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;EACjBR,SAAS,CAAC,MAAM;IACdE,KAAK,CAACiB,GAAG,CAAE,0CAAyCX,IAAI,CAACY,QAAS,EAAC,CAAC,CACjEC,IAAI,CAACC,GAAG,IAAI;MACX;MACA,MAAMC,aAAa,GAAGD,GAAG,CAACE,IAAI;MAC9B,MAAMC,MAAM,GAAGF,aAAa,CAACG,IAAI,CAACD,MAAM,IAAIA,MAAM,CAACE,SAAS,KAAKjB,EAAE,CAAC;MAEpE,IAAIe,MAAM,EAAE;QACVX,WAAW,CAAC,IAAI,CAAC;QACjBE,WAAW,CAACS,MAAM,CAACG,GAAG,CAAC,CAAC,CAAE;MAC5B,CAAC,MAAM;QACLd,WAAW,CAAC,KAAK,CAAC;MACpB;IACF,CAAC,CAAC,CACDe,KAAK,CAACC,GAAG,IAAIb,OAAO,CAACC,GAAG,CAACY,GAAG,CAAC,CAAC;EACnC,CAAC,EAAE,CAACpB,EAAE,EAAEF,IAAI,CAACY,QAAQ,CAAC,CAAC;;EAEvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAAAX,EAAA,CAxEKF,gBAAgB;EAAA,QACPJ,SAAS;AAAA;AAAA4B,EAAA,GADlBxB,gBAAgB;AA0EtB,eAAeA,gBAAgB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}